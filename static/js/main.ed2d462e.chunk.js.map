{"version":3,"sources":["components/Input/Input.tsx","components/Settings/SettingsBlock.tsx","components/Counter/CounterBlock.tsx","components/Button/Button.tsx","state/counterReducer.ts","App.tsx","state/store.ts","reportWebVitals.ts","index.tsx","components/Counter/CounterBlock.module.css","components/Button/Button.module.css","components/Settings/SettingsBlock.module.css"],"names":["Input","props","labelText","className","type","name","inputName","value","onChange","callback","SettingsBlock","setClassNameForInput","error","s","input","startValue","changeValue","maxValue","CounterBlock","counterValue","setClass","message","setClassForCounterValue","settingsMode","Button","title","disabled","button","onClick","initialState","App","preloadedState","dispatch","useDispatch","useSelector","state","counter","useState","setError","setSettingsMode","setDisabled","setDisabledForInc","setDisabledForReset","useEffect","setCounterValue","e","currentValue","Number","currentTarget","setMaxValueAC","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","persistedTodosString","localStorage","getItem","JSON","parse","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ed2d462e.chunk.js","sourcesContent":["import React, {ChangeEvent} from 'react';\r\n\r\ntype InputType = {\r\n    labelText: string\r\n    inputName: string\r\n    className: string\r\n    value: number\r\n    callback: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Input = (props: InputType) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            {props.labelText}\r\n            <input className={props.className}\r\n                   type={\"number\"}\r\n                   name={props.inputName}\r\n                   value={props.value}\r\n                   onChange={props.callback}/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n\r\n    )\r\n}","import React, {ChangeEvent} from 'react';\r\nimport s from './SettingsBlock.module.css'\r\nimport {Input} from \"../Input/Input\";\r\n\r\ntype SettingsBlockType = {\r\n    startValue: number\r\n    maxValue: number\r\n    changeValue: (e: ChangeEvent<HTMLInputElement>) => void\r\n    error: boolean\r\n}\r\n\r\nexport const SettingsBlock = (props: SettingsBlockType) => {\r\n\r\n    let setClassNameForInput = props.error ? s.error : s.input;\r\n\r\n\r\n    return (\r\n\r\n            <div className='settings'>\r\n                <Input labelText={'start value:'}\r\n                       className={setClassNameForInput}\r\n                       inputName={'startValue'}\r\n                       value={props.startValue}\r\n                       callback={props.changeValue}/>\r\n\r\n                <Input labelText={'max value:'}\r\n                       className={setClassNameForInput}\r\n                       inputName={'maxValue'}\r\n                       value={props.maxValue}\r\n                       callback={props.changeValue}/>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}","import React from 'react';\r\nimport s from './CounterBlock.module.css'\r\n\r\ntype CounterBlockType = {\r\n    counterValue: number\r\n    maxValue: number\r\n    error: boolean\r\n    settingsMode: boolean\r\n}\r\n\r\nexport const CounterBlock = ({counterValue,maxValue, ...props}: CounterBlockType) => {\r\n\r\n    const setClass = props.error ? `${s.message} ${s.error}` : s.message\r\n    const setClassForCounterValue = counterValue >= maxValue ? `${s.counterValue} ${s.error}` : s.counterValue\r\n\r\n\r\n    return (\r\n\r\n            <div className={'counter'}>\r\n                {props.settingsMode &&\r\n                <div className={setClass}>\r\n                    {props.error\r\n                        ? `Enter correct values`\r\n                        : `Enter values and press 'set'`}\r\n                </div>}\r\n\r\n\r\n                <div className={setClassForCounterValue}>\r\n                    {!props.error && counterValue}\r\n                </div>\r\n\r\n            </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Button.module.css'\r\n\r\ntype ButtonType = {\r\n    title: string\r\n    callback: () => void\r\n    disabled: boolean\r\n}\r\n\r\nexport const Button = ({title, callback, ...props}: ButtonType) => {\r\n    const setClass = props.disabled ? `${s.button} ${s.disabled}` : s.button\r\n\r\n    return <button className={setClass} onClick={callback} disabled={props.disabled}>\r\n        {title}\r\n    </button>\r\n\r\n}","const initialState = {\r\n    startValue: 0,\r\n    maxValue: 5,\r\n    counterValue: 0,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsType = ReturnType<typeof increaseValueAC>\r\n    | ReturnType<typeof setCounterValueAC>\r\n    | ReturnType<typeof setStartValueAC>\r\n    | ReturnType<typeof setMaxValueAC>\r\n\r\n\r\nexport const counterReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"INCREASE-VALUE\":\r\n            return {...state, counterValue: state.counterValue + 1}\r\n\r\n        case \"SET-COUNTER-VALUE\":\r\n            return {...state, counterValue: action.value}\r\n        case \"SET-START-VALUE\":\r\n            return {...state, startValue: action.value}\r\n        case \"SET-MAX-VALUE\":\r\n            return {...state, maxValue: action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const increaseValueAC = () => {\r\n    return {\r\n        type: 'INCREASE-VALUE'\r\n    } as const\r\n}\r\nexport const setCounterValueAC = (value: number) => {\r\n    return {\r\n        type: 'SET-COUNTER-VALUE',\r\n        value\r\n    } as const\r\n}\r\nexport const setStartValueAC = (value: number) => {\r\n    return {\r\n        type: 'SET-START-VALUE',\r\n        value\r\n    } as const\r\n}\r\nexport const setMaxValueAC = (value: number) => {\r\n    return {\r\n        type: 'SET-MAX-VALUE',\r\n        value\r\n    } as const\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from 'react';\nimport {SettingsBlock} from \"./components/Settings/SettingsBlock\";\nimport {CounterBlock} from \"./components/Counter/CounterBlock\";\nimport {Button} from \"./components/Button/Button\";\nimport './App.css';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./state/store\";\nimport {increaseValueAC, setCounterValueAC, setMaxValueAC, setStartValueAC} from \"./state/counterReducer\";\n\n\nfunction App() {\n\n    let dispatch = useDispatch()\n    let startValue = useSelector<AppRootStateType, number>(state => state.counter.startValue)\n    let maxValue = useSelector<AppRootStateType, number>(state => state.counter.maxValue)\n    let counterValue = useSelector<AppRootStateType, number>(state => state.counter.counterValue)\n\n\n    let [error, setError] = useState<boolean>(false)\n    let [settingsMode, setSettingsMode] = useState<boolean>(true)\n\n\n    const setDisabled = !settingsMode || error;\n    const setDisabledForInc = counterValue === maxValue || error || settingsMode\n    const setDisabledForReset = maxValue === startValue || error || settingsMode\n\n\n//изменяет значение в инпутах\n    const changeValue = (e: ChangeEvent<HTMLInputElement>) => {\n        let currentValue = Number(e.currentTarget.value)\n        setSettingsMode(true)\n\n        switch (e.currentTarget.name) {\n            case 'startValue':\n                dispatch(setStartValueAC(currentValue))\n                break;\n            case 'maxValue':\n                dispatch(setMaxValueAC(currentValue))\n                break;\n        }\n    }\n\n    useEffect(() => {\n        if (startValue >= maxValue || startValue < 0) {\n            setError(true)\n        } else {\n            setError(false)\n        }\n    }, [startValue, maxValue])\n\n//увеличивает значение в счетчике\n    const increaseValue = () => {\n        dispatch(increaseValueAC())\n    }\n\n//устанавливает значение счетчика\n    const setCounterValue = () => {\n        if (!error) {\n            dispatch(setCounterValueAC(startValue))\n            setSettingsMode(false)\n        }\n    }\n\n    return (\n        <div className=\"cover\">\n\n            <div className={'settingsBlock'}>\n                <SettingsBlock startValue={startValue}\n                               maxValue={maxValue}\n                               changeValue={changeValue}\n                               error={error}/>\n                <Button title='set' callback={setCounterValue} disabled={setDisabled}/>\n            </div>\n            <div className={'counterBlock'}>\n                <CounterBlock counterValue={counterValue}\n                              maxValue={maxValue}\n                              error={error}\n                              settingsMode={settingsMode}/>\n                <Button title='inc' callback={increaseValue} disabled={setDisabledForInc}/>\n                <Button title='reset' callback={setCounterValue} disabled={setDisabledForReset}/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers, createStore} from \"redux\";\r\nimport {counterReducer} from \"./counterReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    counter: counterReducer\r\n})\r\n\r\nlet preloadedState;\r\nconst persistedTodosString = localStorage.getItem('state')\r\nif (persistedTodosString) {\r\n    preloadedState = JSON.parse(persistedTodosString)\r\n}\r\n\r\nexport const store = createStore(rootReducer, preloadedState)\r\n\r\nstore.subscribe(() => {\r\n    localStorage.setItem('state', JSON.stringify(store.getState()))\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App/></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterValue\":\"CounterBlock_counterValue__1WXFd\",\"error\":\"CounterBlock_error__1diwO\",\"message\":\"CounterBlock_message__1mCop\",\"blink1\":\"CounterBlock_blink1__3nzab\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3sFsz\",\"disabled\":\"Button_disabled__F4o3a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SettingsBlock_button__21Ggi\",\"error\":\"SettingsBlock_error__3ieVv\",\"input\":\"SettingsBlock_input__lWAHZ\"};"],"sourceRoot":""}